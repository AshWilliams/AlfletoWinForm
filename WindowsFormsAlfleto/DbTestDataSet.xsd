<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DbTestDataSet" targetNamespace="http://tempuri.org/DbTestDataSet.xsd" xmlns:mstns="http://tempuri.org/DbTestDataSet.xsd" xmlns="http://tempuri.org/DbTestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DbTestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DbTestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsAlfleto.Properties.Settings.GlobalReference.Default.DbTestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TablaTestTableAdapter" GeneratorDataComponentClassName="TablaTestTableAdapter" Name="TablaTest" UserDataComponentName="TablaTestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DbTestConnectionString (Settings)" DbObjectName="dbo.TablaTest" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TablaTest] WHERE (([Id] = @Original_Id) AND ((@IsNull_TextoRandom = 1 AND [TextoRandom] IS NULL) OR ([TextoRandom] = @Original_TextoRandom)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TextoRandom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TextoRandom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TablaTest] ([TextoRandom]) VALUES (@TextoRandom);
SELECT Id, TextoRandom FROM TablaTest WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TextoRandom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, TextoRandom FROM dbo.TablaTest</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TablaTest] SET [TextoRandom] = @TextoRandom WHERE (([Id] = @Original_Id) AND ((@IsNull_TextoRandom = 1 AND [TextoRandom] IS NULL) OR ([TextoRandom] = @Original_TextoRandom)));
SELECT Id, TextoRandom FROM TablaTest WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TextoRandom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TextoRandom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TextoRandom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TextoRandom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\ANORAK\APPDATA\LOCAL\TEMPORARY PROJECTS\WINDOWSFORMSALFLETO\BASEDEDATOS\DBTEST.MDF].dbo.TablaTest" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="TextoRandom" DataSetColumn="TextoRandom" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcedureTestTableAdapter" GeneratorDataComponentClassName="ProcedureTestTableAdapter" Name="ProcedureTest" UserDataComponentName="ProcedureTestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DbTestConnectionString (Settings)" DbObjectName="dbo.ProcedureTest" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ProcedureTest</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@param1" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="TextoRandom" DataSetColumn="TextoRandom" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DbTestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DbTestDataSet" msprop:Generator_UserDSName="DbTestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TablaTest" msprop:Generator_TableClassName="TablaTestDataTable" msprop:Generator_TableVarName="tableTablaTest" msprop:Generator_TablePropName="TablaTest" msprop:Generator_RowDeletingName="TablaTestRowDeleting" msprop:Generator_RowChangingName="TablaTestRowChanging" msprop:Generator_RowEvHandlerName="TablaTestRowChangeEventHandler" msprop:Generator_RowDeletedName="TablaTestRowDeleted" msprop:Generator_UserTableName="TablaTest" msprop:Generator_RowChangedName="TablaTestRowChanged" msprop:Generator_RowEvArgName="TablaTestRowChangeEvent" msprop:Generator_RowClassName="TablaTestRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="TextoRandom" msprop:Generator_ColumnVarNameInTable="columnTextoRandom" msprop:Generator_ColumnPropNameInRow="TextoRandom" msprop:Generator_ColumnPropNameInTable="TextoRandomColumn" msprop:Generator_UserColumnName="TextoRandom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProcedureTest" msprop:Generator_TableClassName="ProcedureTestDataTable" msprop:Generator_TableVarName="tableProcedureTest" msprop:Generator_TablePropName="ProcedureTest" msprop:Generator_RowDeletingName="ProcedureTestRowDeleting" msprop:Generator_RowChangingName="ProcedureTestRowChanging" msprop:Generator_RowEvHandlerName="ProcedureTestRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcedureTestRowDeleted" msprop:Generator_UserTableName="ProcedureTest" msprop:Generator_RowChangedName="ProcedureTestRowChanged" msprop:Generator_RowEvArgName="ProcedureTestRowChangeEvent" msprop:Generator_RowClassName="ProcedureTestRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="TextoRandom" msprop:Generator_ColumnVarNameInTable="columnTextoRandom" msprop:Generator_ColumnPropNameInRow="TextoRandom" msprop:Generator_ColumnPropNameInTable="TextoRandomColumn" msprop:Generator_UserColumnName="TextoRandom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TablaTest" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="ProcedureTest_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProcedureTest" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>